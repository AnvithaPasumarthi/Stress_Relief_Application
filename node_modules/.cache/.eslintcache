[{"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/index.js":"1","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/reportWebVitals.js":"2","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/App.js":"3","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/config.js":"4","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Events/events.js":"5","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/LaunchPage/Launchpage.js":"6","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/LaunchPage/SliderData.js":"7","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/songs.js":"8","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/DisplayEvent/index.js":"9","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/PieChart/index.js":"10","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/index.js":"11"},{"size":500,"mtime":1637887337550,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1637887337550,"results":"14","hashOfConfig":"13"},{"size":7457,"mtime":1638411019052,"results":"15","hashOfConfig":"13"},{"size":1546,"mtime":1638306353394,"results":"16","hashOfConfig":"13"},{"size":518,"mtime":1637887337536,"results":"17","hashOfConfig":"13"},{"size":1450,"mtime":1638346526855,"results":"18","hashOfConfig":"13"},{"size":422,"mtime":1638067505735,"results":"19","hashOfConfig":"13"},{"size":1945,"mtime":1638336081933,"results":"20","hashOfConfig":"13"},{"size":170,"mtime":1637887337536,"results":"21","hashOfConfig":"13"},{"size":3553,"mtime":1638417256772,"results":"22","hashOfConfig":"13"},{"size":6048,"mtime":1638336081932,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17tarj8",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/index.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/reportWebVitals.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/App.js",["47"],"import { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\nimport PieChart from \"./Components/PieChart\";\nimport { SliderData } from \"./Components/LaunchPage/SliderData\";\nimport Song from \"./Components/Music/songs\";\n\nfunction App() {\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n  const [stateSpecificData, setStateSpecificData] = useState();\n  const [allStateData, setAllStateData] = useState();\n  const stateCode = [\"ny\", \"or\", \"ca\", \"wa\", \"az\", \"nv\", \"co\", \"ut\"];\n\n  const parseStateData = (data, state) => {\n    let statedata = data.filter((val) => {\n      return val._embedded.venues[0].state.stateCode.toLowerCase() === state;\n    });\n    return statedata;\n  };\n  const createDisplayDataJoke = (data) => {\n    return <div className=\"Jokedisplay\">{data}</div>;\n  };\n  const createDisplayDataDictionary = (data) => {\n    return (\n      <>\n        <div className=\"dictionarydisplay\">\n          <div className=\"dictionaryWord\">{`${data.word}`}</div>\n          <div className=\"dictionaryDefinition\">{`Meaning: ${data.definition}`}</div>\n          <div className=\"dictionaryPronunciation\">{`Pronunciation:   ${data.pronunciation}`}</div>\n        </div>\n      </>\n    );\n  };\n  const createDisplayEventsData = (piedata) => {\n    let data = [];\n    for (let key in piedata) {\n      let keyLabel;\n      if (key === \"ny\") {\n        keyLabel = \"New York\";\n      }\n      if (key === \"or\") {\n        keyLabel = \"Oregon\";\n      }\n      if (key === \"ca\") {\n        keyLabel = \"California\";\n      }\n      if (key === \"wa\") {\n        keyLabel = \"Washington\";\n      }\n      if (key === \"az\") {\n        keyLabel = \"Arizona\";\n      }\n      if (key === \"nv\") {\n        keyLabel = \"Nevada\";\n      }\n      if (key === \"co\") {\n        keyLabel = \"Colorado\";\n      }\n      let tempObj = {};\n      tempObj.id = keyLabel;\n      tempObj.label = keyLabel;\n      tempObj.value = piedata[key].length;\n\n      if (piedata[key].length > 1) {\n        tempObj.value = piedata[key].length - 1;\n      } else {\n        tempObj.value = piedata[key].length;\n      }\n      tempObj.color = \"hsl(205, 70%, 50%)\";\n      data.push(tempObj);\n    }\n    const onClickHandler = (pieData, allData) => {\n      let piekey = pieData.data.id;\n      let stateData = allData[piekey];\n      setStateSpecificData(stateData);\n      console.log(\"this data\", piekey, stateData);\n    };\n    return <PieChart piedata={piedata} fetchStateData={onClickHandler} />;\n  };\n  const createDisplayDataAdvice = (data) => {\n    return (\n      <>\n        <div className=\"AdviceDisplay\">\n          <h1 className=\"advice\">\n            <span>{`${data}`}</span>\n          </h1>\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataQuotes = (data) => {\n    let RandomNumber = Math.floor(Math.random() * 100);\n    return (\n      <div className=\"QuotesDisplay\">\n        <div className=\"Quote\">\n          <q>{data[RandomNumber].en}</q>\n        </div>\n        <div>\n          <cite className=\"quoteauthorname\">-{data[RandomNumber].author}</cite>\n        </div>\n      </div>\n    );\n  };\n  const createDisplayMusic = (data) => {\n    if (data) {\n      return (\n        <div className=\"MusicDisplay\">\n          <Song />\n        </div>\n      );\n    } else\n      return (\n        <>\n          <Song />\n        </>\n      );\n  };\n  const createDisplayDataGIFs = (data) => {\n    return (\n      <>\n        <div className=\"GIFdisplay\">\n          <img\n            className=\"GIFimageDisplay\"\n            src={data.url}\n            alt=\"GiFs\"\n            height=\"20%\"\n            width=\"20%\"\n          />\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataNews = (data) => {\n    return (\n      <>\n        {data.map((val) => {\n          return (\n            <>\n              <div className=\"NewsDisplay\" key={val.author}>\n                <img\n                  src={val.urlToImage}\n                  height=\"20%\"\n                  width=\"30%\"\n                  alt=\"NewsImage\"\n                  className=\"NewsImageIcon\"\n                />\n                <div className=\"Newstitle\">{` ${val.title}`}</div>\n                <div className=\"Newsdescription\"> {` ${val.description}`}</div>\n                <div className=\"quoteauthorname\"> {val.source.name}</div>\n              </div>\n            </>\n          );\n        })}\n      </>\n    );\n  };\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        setIsEvent(false);\n        if (eventName === \"jokes\") {\n          setDisplayData(createDisplayDataJoke(data.joke));\n        } else if (eventName === \"dictionary\") {\n          setDisplayData(createDisplayDataDictionary(data[0]));\n        } else if (eventName === \"advice\") {\n          setDisplayData(createDisplayDataAdvice(data.slip.advice));\n        } else if (eventName === \"quotes\") {\n          setDisplayData(createDisplayDataQuotes(data.slice(0, 100)));\n        } else if (eventName === \"news\") {\n          setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n        } else if (eventName === \"music\") {\n          setDisplayData(createDisplayMusic(data));\n        } else if (eventName === \"gifs/memes\") {\n          setDisplayData(createDisplayDataGIFs(data.memes[0]));\n        } else if (eventName === \"events\") {\n          setIsEvent(true);\n          let stateObjHolder = {};\n          stateCode.forEach((state) => {\n            let stateData = parseStateData(data._embedded.events, state);\n            stateObjHolder[state] = stateData;\n          });\n          setAllStateData(stateObjHolder);\n\n          setDisplayData(createDisplayEventsData(stateObjHolder));\n        }\n      });\n  };\n\n  return (\n    <BrowserRouter>\n      <LaunchPage slides={SliderData} />\n      <div className=\"navContainer\">\n        <div className=\"AllIconsDisplay\">\n          {eventsConfig.map((data) => {\n            return <Events eventData={data} iconClick={apiResponseHandler} />;\n          })}\n        </div>\n      </div>\n      <div className=\"output\">\n        {displayData && <Display displayContent={displayData} />}\n        {isEvent && stateSpecificData && (\n          <span className=\"EventsAndPie\">\n            <table className=\"EventsTable\">\n              <thead>\n                <tr>\n                  <th>Event</th>\n                  <th>city</th>\n                  <th>Zipcode </th>\n                  <th>Date</th>\n                  <th>Site</th>\n                </tr>\n              </thead>\n              {stateSpecificData &&\n                stateSpecificData.map((val) => {\n                  return (\n                    <tbody>\n                      <tr key={val.id}>\n                        <td>{val.name}</td>\n                        <td> {val._embedded.venues[0].city.name}</td>\n                        <td>{val._embedded.venues[0].postalCode} </td>\n                        <td>{val.dates.start.localDate}</td>\n                        <td>\n                          <a href={val.url}>Link</a>\n                        </td>\n                      </tr>\n                    </tbody>\n                  );\n                })}\n            </table>\n          </span>\n        )}\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/config.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Events/events.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/LaunchPage/Launchpage.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/LaunchPage/SliderData.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/songs.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/DisplayEvent/index.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/PieChart/index.js",[],"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/index.js",[],{"ruleId":"48","severity":1,"message":"49","line":16,"column":10,"nodeType":"50","messageId":"51","endLine":16,"endColumn":22},"no-unused-vars","'allStateData' is assigned a value but never used.","Identifier","unusedVar"]