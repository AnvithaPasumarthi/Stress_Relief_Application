{"ast":null,"code":"var _jsxFileName = \"/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\nimport PieChart from \"./Components/PieChart\";\nimport { SliderData } from \"./Components/LaunchPage/SliderData\";\nimport Song from \"./Components/Music/songs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n  const [stateSpecificData, setStateSpecificData] = useState();\n  const [allStateData, setAllStateData] = useState();\n  const stateCode = [\"ny\", \"or\", \"ca\", \"wa\", \"az\", \"nv\", \"co\", \"ut\"];\n\n  const parseStateData = (data, state) => {\n    let statedata = data.filter(val => {\n      return val._embedded.venues[0].state.stateCode.toLowerCase() === state;\n    });\n    return statedata;\n  };\n\n  const createDisplayDataJoke = data => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Jokedisplay\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  };\n\n  const createDisplayDataDictionary = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionarydisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryWord\",\n          children: `${data.word}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryDefinition\",\n          children: `Meaning: ${data.definition}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryPronunciation\",\n          children: `Pronunciation:   ${data.pronunciation}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayEventsData = piedata => {\n    // {\n    //   \"id\": \"php\",\n    //   \"label\": \"php\",\n    //   \"value\": 95,\n    //   \"color\": \"hsl(205, 70%, 50%)\"\n    // }\n    let data = [];\n\n    for (let key in piedata) {\n      let keyLabel;\n\n      if (key === \"ny\") {\n        keyLabel = \"New York\";\n      }\n\n      if (key === \"or\") {\n        keyLabel = \"Oregon\";\n      }\n\n      if (key === \"ca\") {\n        keyLabel = \"California\";\n      }\n\n      if (key === \"wa\") {\n        keyLabel = \"Washington\";\n      }\n\n      if (key === \"az\") {\n        keyLabel = \"Arizona\";\n      }\n\n      if (key === \"nv\") {\n        keyLabel = \"Nevada\";\n      }\n\n      if (key === \"co\") {\n        keyLabel = \"Colorado\";\n      }\n\n      let tempObj = {};\n      tempObj.id = keyLabel;\n      tempObj.label = keyLabel;\n      tempObj.value = piedata[key].length;\n\n      if (piedata[key].length > 1) {\n        tempObj.value = piedata[key].length - 1;\n      } else {\n        tempObj.value = piedata[key].length;\n      }\n\n      tempObj.color = \"hsl(205, 70%, 50%)\";\n      data.push(tempObj);\n    }\n\n    const onClickHandler = (pieData, allData) => {\n      let piekey = pieData.data.id;\n      let stateData = allData[piekey];\n      setStateSpecificData(stateData);\n      console.log(\"this data\", piekey, stateData);\n    };\n\n    return /*#__PURE__*/_jsxDEV(PieChart, {\n      piedata: piedata,\n      fetchStateData: onClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  };\n\n  const createDisplayDataAdvice = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AdviceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"advice\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${data}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataQuotes = data => {\n    let RandomNumber = Math.floor(Math.random() * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuotesDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Quote\",\n        children: /*#__PURE__*/_jsxDEV(\"q\", {\n          children: data[RandomNumber].en\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"cite\", {\n          className: \"quoteauthorname\",\n          children: [\"-\", data[RandomNumber].author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  };\n\n  const createDisplayMusic = data => {\n    console.log(\"Music data:\" + data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MusicDisplay\",\n      children: /*#__PURE__*/_jsxDEV(Song, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  };\n\n  const createDisplayDataGIFs = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GIFdisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"GIFimageDisplay\",\n          src: data.url,\n          alt: \"GiFs\",\n          height: \"20%\",\n          width: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataNews = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(val => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NewsDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: val.urlToImage,\n              height: \"20%\",\n              width: \"30%\",\n              alt: \"NewsImage\",\n              className: \"NewsImageIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newstitle\",\n              children: ` ${val.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newsdescription\",\n              children: [\" \", ` ${val.description}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quoteauthorname\",\n              children: [\" \", val.source.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, val.author, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false);\n  };\n\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url).then(res => res.json()).then(data => {\n      console.log(data);\n      setIsEvent(false);\n\n      if (eventName === \"jokes\") {\n        setDisplayData(createDisplayDataJoke(data.joke));\n      } else if (eventName === \"dictionary\") {\n        setDisplayData(createDisplayDataDictionary(data[0]));\n      } else if (eventName === \"advice\") {\n        setDisplayData(createDisplayDataAdvice(data.slip.advice));\n      } else if (eventName === \"quotes\") {\n        setDisplayData(createDisplayDataQuotes(data.slice(0, 100)));\n      } else if (eventName === \"news\") {\n        setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n      } else if (eventName === \"music\") {\n        setDisplayData(createDisplayMusic(data));\n      } else if (eventName === \"gifs/memes\") {\n        setDisplayData(createDisplayDataGIFs(data.memes[0]));\n      } else if (eventName === \"events\") {\n        setIsEvent(true);\n        let stateObjHolder = {};\n        stateCode.forEach(state => {\n          let stateData = parseStateData(data._embedded.events, state);\n          stateObjHolder[state] = stateData;\n        });\n        setAllStateData(stateObjHolder);\n        setDisplayData(createDisplayEventsData(stateObjHolder)); // let stateData = parseStateData(data._embedded.events);\n        // setDisplayData(createDisplayDataEvents(stateData));\n      } //eventsConfig.forEach((val)=>{\n      //     if(val.toLowerCase() === eventName){\n      //   }\n      //  })\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(LaunchPage, {\n      slides: SliderData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AllIconsDisplay\",\n        children: eventsConfig.map(data => {\n          return /*#__PURE__*/_jsxDEV(Events, {\n            eventData: data,\n            iconClick: apiResponseHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [displayData && /*#__PURE__*/_jsxDEV(Display, {\n        displayContent: displayData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }, this), isEvent && stateSpecificData && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"EventsAndPie\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"EventsTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"city\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Zipcode \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Site\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), stateSpecificData && stateSpecificData.map(val => {\n            return /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", val._embedded.venues[0].city.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [val._embedded.venues[0].postalCode, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: val.dates.start.localDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: val.url,\n                    children: \"Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this)]\n              }, val.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vQJdi1i2/0PtjIdHfU8QvQ/OPyE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js"],"names":["BrowserRouter","React","useState","LaunchPage","Events","Display","eventsConfig","PieChart","SliderData","Song","App","isEvent","setIsEvent","displayData","setDisplayData","stateSpecificData","setStateSpecificData","allStateData","setAllStateData","stateCode","parseStateData","data","state","statedata","filter","val","_embedded","venues","toLowerCase","createDisplayDataJoke","createDisplayDataDictionary","word","definition","pronunciation","createDisplayEventsData","piedata","key","keyLabel","tempObj","id","label","value","length","color","push","onClickHandler","pieData","allData","piekey","stateData","console","log","createDisplayDataAdvice","createDisplayDataQuotes","RandomNumber","Math","floor","random","en","author","createDisplayMusic","createDisplayDataGIFs","url","createDisplayDataNews","map","urlToImage","title","description","source","name","apiResponseHandler","eventName","fetch","then","res","json","joke","slip","advice","slice","articles","memes","stateObjHolder","forEach","events","city","postalCode","dates","start","localDate"],"mappings":"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","sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\nimport PieChart from \"./Components/PieChart\";\nimport { SliderData } from \"./Components/LaunchPage/SliderData\";\nimport Song from \"./Components/Music/songs\";\n\n\nfunction App() {\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n  const [stateSpecificData, setStateSpecificData] = useState();\n  const [allStateData, setAllStateData] = useState();\n  const stateCode = [\"ny\", \"or\", \"ca\", \"wa\", \"az\", \"nv\", \"co\", \"ut\"];\n\n  const parseStateData = (data, state) => {\n    let statedata = data.filter((val) => {\n      return val._embedded.venues[0].state.stateCode.toLowerCase() === state;\n    });\n    return statedata;\n  };\n  const createDisplayDataJoke = (data) => {\n    return <div className=\"Jokedisplay\">{data}</div>;\n  };\n  const createDisplayDataDictionary = (data) => {\n    return (\n      <>\n        <div className=\"dictionarydisplay\">\n          <div className=\"dictionaryWord\">{`${data.word}`}</div>\n          <div className=\"dictionaryDefinition\">{`Meaning: ${data.definition}`}</div>\n          <div className=\"dictionaryPronunciation\">{`Pronunciation:   ${data.pronunciation}`}</div>\n        </div>\n      </>\n    );\n  };\n  const createDisplayEventsData = (piedata) => {\n    // {\n    //   \"id\": \"php\",\n    //   \"label\": \"php\",\n    //   \"value\": 95,\n    //   \"color\": \"hsl(205, 70%, 50%)\"\n    // }\n\n    let data = [];\n    for (let key in piedata) {\n      let keyLabel;\n      if (key === \"ny\") {\n        keyLabel = \"New York\";\n      }\n      if (key === \"or\") {\n        keyLabel = \"Oregon\";\n      }\n      if (key === \"ca\") {\n        keyLabel = \"California\";\n      }\n      if (key === \"wa\") {\n        keyLabel = \"Washington\";\n      }\n      if (key === \"az\") {\n        keyLabel = \"Arizona\";\n      }\n      if (key === \"nv\") {\n        keyLabel = \"Nevada\";\n      }\n      if (key === \"co\") {\n        keyLabel = \"Colorado\";\n      }\n      let tempObj = {};\n      tempObj.id = keyLabel;\n      tempObj.label = keyLabel;\n      tempObj.value = piedata[key].length;\n\n      if (piedata[key].length > 1) {\n        tempObj.value = piedata[key].length - 1;\n      } else {\n        tempObj.value = piedata[key].length;\n      }\n      tempObj.color = \"hsl(205, 70%, 50%)\";\n      data.push(tempObj);\n    }\n    const onClickHandler = (pieData, allData) => {\n      let piekey = pieData.data.id;\n      let stateData = allData[piekey];\n      setStateSpecificData(stateData);\n      console.log(\"this data\", piekey, stateData);\n    };\n    return <PieChart piedata={piedata} fetchStateData={onClickHandler} />;\n  };\n  const createDisplayDataAdvice = (data) => {\n    return (\n      <>\n        <div className=\"AdviceDisplay\">\n          <h1 className=\"advice\">\n            <span>{`${data}`}</span>\n          </h1>\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataQuotes = (data) => {\n    let RandomNumber = Math.floor(Math.random() * 100);\n    return (\n      <div className=\"QuotesDisplay\">\n        <div className=\"Quote\">\n          <q>{data[RandomNumber].en}</q>\n        </div>\n        <div>\n          <cite className=\"quoteauthorname\">-{data[RandomNumber].author}</cite>\n        </div>\n      </div>\n    );\n  };\n  const createDisplayMusic = (data) => {\n    console.log(\"Music data:\" + data);\n\n    return (\n      <div className=\"MusicDisplay\">\n        <Song />\n      </div>\n    );\n  };\n  const createDisplayDataGIFs = (data) => {\n    return (\n      <>\n        <div className=\"GIFdisplay\">\n          <img\n            className=\"GIFimageDisplay\"\n            src={data.url}\n            alt=\"GiFs\"\n            height=\"20%\"\n            width=\"20%\"\n          />\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataNews = (data) => {\n    return (\n      <>\n        {data.map((val) => {\n          return (\n            <>\n              <div className=\"NewsDisplay\" key={val.author}>\n                <img\n                  src={val.urlToImage}\n                  height=\"20%\"\n                  width=\"30%\"\n                  alt=\"NewsImage\"\n                  className=\"NewsImageIcon\"\n                />\n                <div className=\"Newstitle\">{` ${val.title}`}</div>\n                <div className=\"Newsdescription\"> {` ${val.description}`}</div>\n                <div className=\"quoteauthorname\"> {val.source.name}</div>\n              </div>\n            </>\n          );\n        })}\n      </>\n    );\n  };\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setIsEvent(false);\n        if (eventName === \"jokes\") {\n          setDisplayData(createDisplayDataJoke(data.joke));\n        } else if (eventName === \"dictionary\") {\n          setDisplayData(createDisplayDataDictionary(data[0]));\n        } else if (eventName === \"advice\") {\n          setDisplayData(createDisplayDataAdvice(data.slip.advice));\n        } else if (eventName === \"quotes\") {\n          setDisplayData(createDisplayDataQuotes(data.slice(0, 100)));\n        } else if (eventName === \"news\") {\n          setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n        } else if (eventName === \"music\") {\n          setDisplayData(createDisplayMusic(data));\n        }else if (eventName === \"gifs/memes\") {\n          setDisplayData(createDisplayDataGIFs(data.memes[0]));\n        } else if (eventName === \"events\") {\n          setIsEvent(true);\n          let stateObjHolder = {};\n          stateCode.forEach((state) => {\n            let stateData = parseStateData(data._embedded.events, state);\n            stateObjHolder[state] = stateData;\n          });\n          setAllStateData(stateObjHolder);\n\n          setDisplayData(createDisplayEventsData(stateObjHolder));\n          // let stateData = parseStateData(data._embedded.events);\n          // setDisplayData(createDisplayDataEvents(stateData));\n        }\n        //eventsConfig.forEach((val)=>{\n        //     if(val.toLowerCase() === eventName){\n\n        //   }\n        //  })\n      });\n  };\n\n  return (\n    <BrowserRouter>\n      <LaunchPage slides={SliderData} />\n      <div className=\"navContainer\">\n        <div className=\"AllIconsDisplay\">\n          {eventsConfig.map((data) => {\n            return <Events eventData={data} iconClick={apiResponseHandler} />;\n          })}\n        </div>\n      </div>\n      <div className=\"output\">\n        {displayData && <Display displayContent={displayData} />}\n        {isEvent && stateSpecificData && (\n          <span className=\"EventsAndPie\">\n            <table className=\"EventsTable\">\n              <thead>\n                <tr>\n                  <th>Event</th>\n                  <th>city</th>\n                  <th>Zipcode </th>\n                  <th>Date</th>\n                  <th>Site</th>\n                </tr>\n              </thead>\n              {stateSpecificData &&\n                stateSpecificData.map((val) => {\n                  return (\n                    <tbody>\n                      <tr key={val.id}>\n                        <td>{val.name}</td>\n                        <td> {val._embedded.venues[0].city.name}</td>\n                        <td>{val._embedded.venues[0].postalCode} </td>\n                        <td>{val.dates.start.localDate}</td>\n                        <td>\n                          <a href={val.url}>Link</a>\n                        </td>\n                      </tr>\n                    </tbody>\n                  );\n                })}\n            </table>\n          </span>\n        )}\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}