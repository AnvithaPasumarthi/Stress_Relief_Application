{"ast":null,"code":"var _jsxFileName = \"/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n\n  const createDisplayDataJoke = data => {\n    console.log(\"data from joke call\" + data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Jokedisplay\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  };\n\n  const createDisplayDataDictionary = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionarydisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryWord\",\n          children: `${data.word}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryDefinition\",\n          children: `Meaning: ${data.definition}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryPronunciation\",\n          children: `Pronunciation:   ${data.pronunciation}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataAdvice = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AdviceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"advice\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${data}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataQuotes = data => {\n    let RandomNumber = Math.floor(Math.random() * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuotesDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [data[RandomNumber].en, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data[RandomNumber].author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }, this);\n  };\n\n  const createDisplayDataGIFs = data => {\n    console.log(\"datagifs\" + data.url);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GIFdisplay\",\n        children: [console.log(\"image:\" + data.url), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.url,\n          alt: \"GiFs\",\n          height: \"20%\",\n          width: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataNews = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(val => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NewsDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: val.urlToImage,\n              height: \"20%\",\n              width: \"20%\",\n              alt: \"NewsImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newstitle\",\n              children: `Title : ${val.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newsdescription\",\n              children: [\" \", `Description : ${val.description}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false);\n  };\n\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url).then(res => res.json()).then(data => {\n      console.log(data);\n      setIsEvent(false);\n\n      if (eventName === \"jokes\") {\n        setDisplayData(createDisplayDataJoke(data.joke));\n      } else if (eventName === \"dictionary\") {\n        setDisplayData(createDisplayDataDictionary(data[0]));\n      } else if (eventName === \"advice\") {\n        setDisplayData(createDisplayDataAdvice(data.slip.advice));\n      } else if (eventName === \"quotes\") {\n        setDisplayData(createDisplayDataQuotes(data.slice(0, 100)));\n      } else if (eventName === \"news\") {\n        setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n      } else if (eventName === \"gifs/memes\") {\n        setDisplayData(createDisplayDataGIFs(data));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(LaunchPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AllIconsDisplay\",\n        children: eventsConfig.map(data => {\n          return /*#__PURE__*/_jsxDEV(Events, {\n            eventData: data,\n            iconClick: apiResponseHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: displayData && /*#__PURE__*/_jsxDEV(Display, {\n        displayContent: displayData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2T7xYhZT3KtaSbnjDgPxB8VUaVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js"],"names":["BrowserRouter","React","useState","LaunchPage","Events","Display","eventsConfig","App","isEvent","setIsEvent","displayData","setDisplayData","createDisplayDataJoke","data","console","log","createDisplayDataDictionary","word","definition","pronunciation","createDisplayDataAdvice","createDisplayDataQuotes","RandomNumber","Math","floor","random","en","author","createDisplayDataGIFs","url","createDisplayDataNews","map","val","urlToImage","title","description","apiResponseHandler","eventName","fetch","then","res","json","joke","slip","advice","slice","articles"],"mappings":"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","sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\n\nfunction App() {\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n\n  const createDisplayDataJoke = (data) => {\n    console.log(\"data from joke call\" + data);\n    return <div className=\"Jokedisplay\">{data}</div>;\n  };\n  const createDisplayDataDictionary = (data) => {\n    return (\n      <>\n        <div className=\"dictionarydisplay\">\n          <div className=\"dictionaryWord\">{`${data.word}`}</div>\n          <div className=\"dictionaryDefinition\">{`Meaning: ${data.definition}`}</div>\n          <div className=\"dictionaryPronunciation\">{`Pronunciation:   ${data.pronunciation}`}</div>\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataAdvice = (data) => {\n    return (\n      <>\n        <div className=\"AdviceDisplay\">\n          <h1 className=\"advice\">\n            <span>{`${data}`}</span>\n          </h1>\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataQuotes = (data) => {\n   \n    let RandomNumber = Math.floor(Math.random() * 100);\n    return ( \n     <div className=\"QuotesDisplay\">\n       <span>{data[RandomNumber].en} </span>\n       <span>{data[RandomNumber].author}</span>\n      </div>\n    );\n  };\n  const createDisplayDataGIFs = (data) => {\n    console.log(\"datagifs\" + data.url);\n    return (\n      <>\n        <div className=\"GIFdisplay\">\n          {console.log(\"image:\" + data.url)}\n          <img src={data.url} alt=\"GiFs\" height=\"20%\" width=\"20%\" />\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataNews = (data) => {\n    return (\n      <>\n        {data.map((val) => {\n          return (\n            <>\n              <div className=\"NewsDisplay\">\n                <img\n                  src={val.urlToImage}\n                  height=\"20%\"\n                  width=\"20%\"\n                  alt=\"NewsImage\"\n                />\n                <div className=\"Newstitle\">{`Title : ${val.title}`}</div>\n                <div className=\"Newsdescription\"> {`Description : ${val.description}`}</div>\n              </div>\n            </>\n          );\n        })}\n      </>\n    );\n  };\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setIsEvent(false);\n        if (eventName === \"jokes\") {\n          setDisplayData(createDisplayDataJoke(data.joke));\n        } else if (eventName === \"dictionary\") {\n          setDisplayData(createDisplayDataDictionary(data[0]));\n        } else if (eventName === \"advice\") {\n          setDisplayData(createDisplayDataAdvice(data.slip.advice));\n        }\n        else if (eventName === \"quotes\") {\n          setDisplayData(createDisplayDataQuotes(data.slice(0,100)));\n        }\n        else if (eventName === \"news\") {\n          setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n        }\n        else if (eventName === \"gifs/memes\") {\n          setDisplayData(createDisplayDataGIFs(data));\n        }\n      });\n  };\n\n  return (\n    <BrowserRouter>\n      <LaunchPage />\n      <div className=\"navContainer\">\n        <div className=\"AllIconsDisplay\">\n          {eventsConfig.map((data) => {\n            return <Events eventData={data} iconClick={apiResponseHandler} />;\n          })}\n        </div>\n      </div>\n      <div className=\"output\">\n        {displayData && <Display displayContent={displayData} />}\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}