{"ast":null,"code":"var _jsxFileName = \"/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/index.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport \"./AudioPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AudioPlayer extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.shuffle = arr => arr.sort(() => Math.random() - 0.5);\n\n    this.updateProgress = () => {\n      const {\n        duration,\n        currentTime\n      } = this.audio;\n      const progress = currentTime * 100 / duration;\n      this.setState({\n        progress: progress\n      });\n    };\n\n    this.setProgress = e => {\n      const target = e.target.nodeName === \"SPAN\" ? e.target.parentNode : e.target;\n      const width = target.clientWidth;\n      const rect = target.getBoundingClientRect();\n      const offsetX = e.clientX - rect.left;\n      const duration = this.audio.duration;\n      const currentTime = duration * offsetX / width;\n      const progress = currentTime * 100 / duration;\n      this.audio.currentTime = currentTime;\n      this.setState({\n        progress: progress\n      });\n      this.play();\n    };\n\n    this.play = () => {\n      this.setState({\n        playing: true\n      });\n      this.audio.play();\n      this.props.onPlay();\n    };\n\n    this.pause = () => {\n      this.setState({\n        playing: false\n      });\n      this.audio.pause();\n      this.props.onPause();\n    };\n\n    this.toggle = () => this.state.playing ? this.pause() : this.play();\n\n    this.next = () => {\n      const {\n        repeat,\n        current,\n        songs\n      } = this.state;\n      const total = songs.length;\n      const newSongToPlay = repeat ? current : current < total - 1 ? current + 1 : 0;\n      const active = songs[newSongToPlay];\n      this.setState({\n        current: newSongToPlay,\n        active: active,\n        progress: 0,\n        repeat: false\n      });\n      this.audio.src = active.url;\n      this.play();\n      this.props.onNext();\n    };\n\n    this.previous = () => {\n      const {\n        current,\n        songs\n      } = this.state;\n      const total = songs.length;\n      const newSongToPlay = current > 0 ? current - 1 : total - 1;\n      const active = songs[newSongToPlay];\n      this.setState({\n        current: newSongToPlay,\n        active: active,\n        progress: 0\n      });\n      this.audio.src = active.url;\n      this.play();\n      this.props.onPrevious();\n    };\n\n    this.toggleMute = () => {\n      const {\n        mute\n      } = this.state;\n      this.setState({\n        mute: !mute\n      });\n      this.audio.volume = !!mute;\n    };\n\n    this.state = {\n      active: props.songs[0],\n      songs: props.songs,\n      current: 0,\n      progress: 0,\n      random: false,\n      playing: !!props.autoplay,\n      repeat: false,\n      mute: false\n    };\n    this.audio = document.createElement(\"audio\");\n    this.audio.src = this.state.active.url;\n    this.audio.autoplay = !!this.state.autoplay;\n    this.audio.addEventListener(\"timeupdate\", e => {\n      this.updateProgress();\n      props.onTimeUpdate(e);\n    });\n    this.audio.addEventListener(\"ended\", e => {\n      if (this.state.songs.length > 1 || this.state.repeat) {\n        this.next();\n      } else {\n        this.setState({\n          playing: false,\n          progress: 0\n        });\n      }\n\n      props.onEnded(e);\n    });\n    this.audio.addEventListener(\"error\", e => {\n      this.next();\n      props.onError(e);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      active: nextProps.songs[0],\n      songs: nextProps.songs,\n      current: 0,\n      progress: 0,\n      random: false,\n      playing: !!nextProps.autoplay,\n      repeat: false,\n      mute: false\n    });\n  }\n\n  render() {\n    const {\n      active: currentSong,\n      progress,\n      playing,\n      mute\n    } = this.state;\n    const playPauseClass = classnames({\n      fa: true,\n      \"fa-play\": !playing,\n      \"fa-pause\": playing\n    });\n    const volumeClass = classnames({\n      fa: true,\n      \"fa-volume-up\": !mute,\n      \"fa-volume-off\": mute\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicDisplay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artist-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"artist-name\",\n            children: currentSong.artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"artist-song-name\",\n            children: currentSong.artist.song\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-progress-container\",\n          onClick: e => this.setProgress(e),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-progress-value\",\n            style: {\n              width: progress + \"%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-buttons player-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.toggle,\n              className: \"player-btn big\",\n              title: \"Play/Pause\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: playPauseClass\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.previous,\n              className: \"player-btn medium\",\n              title: \"Previous Song\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-backward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.next,\n              className: \"player-btn medium\",\n              title: \"Next Song\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-forward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"player-btn small volume\",\n              onClick: this.toggleMute,\n              title: \"Mute/Unmute\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: volumeClass\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAudioPlayer.propTypes = {\n  songs: PropTypes.array.isRequired,\n  autoplay: PropTypes.bool,\n  onTimeUpdate: PropTypes.func,\n  onEnded: PropTypes.func,\n  onError: PropTypes.func,\n  onPlay: PropTypes.func,\n  onPause: PropTypes.func,\n  onPrevious: PropTypes.func,\n  onNext: PropTypes.func\n};\nAudioPlayer.defaultProps = {\n  onTimeUpdate: () => {},\n  onEnded: () => {},\n  onError: () => {},\n  onPlay: () => {},\n  onPause: () => {},\n  onPrevious: () => {},\n  onNext: () => {}\n};\nexport default AudioPlayer;","map":{"version":3,"sources":["/Users/anvithapasumarthi/Desktop/FrontEndHomework/src/Components/Music/index.js"],"names":["React","PureComponent","PropTypes","classnames","AudioPlayer","constructor","props","shuffle","arr","sort","Math","random","updateProgress","duration","currentTime","audio","progress","setState","setProgress","e","target","nodeName","parentNode","width","clientWidth","rect","getBoundingClientRect","offsetX","clientX","left","play","playing","onPlay","pause","onPause","toggle","state","next","repeat","current","songs","total","length","newSongToPlay","active","src","url","onNext","previous","onPrevious","toggleMute","mute","volume","autoplay","document","createElement","addEventListener","onTimeUpdate","onEnded","onError","componentWillReceiveProps","nextProps","render","currentSong","playPauseClass","fa","volumeClass","artist","name","song","propTypes","array","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport \"./AudioPlayer.css\";\n\nclass AudioPlayer extends PureComponent {\n  static propTypes = {\n    songs: PropTypes.array.isRequired,\n    autoplay: PropTypes.bool,\n    onTimeUpdate: PropTypes.func,\n    onEnded: PropTypes.func,\n    onError: PropTypes.func,\n    onPlay: PropTypes.func,\n    onPause: PropTypes.func,\n    onPrevious: PropTypes.func,\n    onNext: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onTimeUpdate: () => {},\n    onEnded: () => {},\n    onError: () => {},\n    onPlay: () => {},\n    onPause: () => {},\n    onPrevious: () => {},\n    onNext: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.songs[0],\n      songs: props.songs,\n      current: 0,\n      progress: 0,\n      random: false,\n      playing: !!props.autoplay,\n      repeat: false,\n      mute: false,\n    };\n\n    this.audio = document.createElement(\"audio\");\n    this.audio.src = this.state.active.url;\n    this.audio.autoplay = !!this.state.autoplay;\n\n    this.audio.addEventListener(\"timeupdate\", (e) => {\n      this.updateProgress();\n\n      props.onTimeUpdate(e);\n    });\n    this.audio.addEventListener(\"ended\", (e) => {\n      if (this.state.songs.length > 1 || this.state.repeat) {\n        this.next();\n      } else {\n        this.setState({ playing: false, progress: 0 });\n      }\n\n      props.onEnded(e);\n    });\n    this.audio.addEventListener(\"error\", (e) => {\n      this.next();\n\n      props.onError(e);\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      active: nextProps.songs[0],\n      songs: nextProps.songs,\n      current: 0,\n      progress: 0,\n      random: false,\n      playing: !!nextProps.autoplay,\n      repeat: false,\n      mute: false,\n    });\n  }\n\n  shuffle = (arr) => arr.sort(() => Math.random() - 0.5);\n\n  updateProgress = () => {\n    const { duration, currentTime } = this.audio;\n    const progress = (currentTime * 100) / duration;\n\n    this.setState({\n      progress: progress,\n    });\n  };\n\n  setProgress = (e) => {\n    const target =\n      e.target.nodeName === \"SPAN\" ? e.target.parentNode : e.target;\n    const width = target.clientWidth;\n    const rect = target.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left;\n    const duration = this.audio.duration;\n    const currentTime = (duration * offsetX) / width;\n    const progress = (currentTime * 100) / duration;\n\n    this.audio.currentTime = currentTime;\n\n    this.setState({\n      progress: progress,\n    });\n\n    this.play();\n  };\n\n  play = () => {\n    this.setState({\n      playing: true,\n    });\n\n    this.audio.play();\n\n    this.props.onPlay();\n  };\n\n  pause = () => {\n    this.setState({\n      playing: false,\n    });\n\n    this.audio.pause();\n\n    this.props.onPause();\n  };\n\n  toggle = () => (this.state.playing ? this.pause() : this.play());\n\n  next = () => {\n    const { repeat, current, songs } = this.state;\n    const total = songs.length;\n    const newSongToPlay = repeat\n      ? current\n      : current < total - 1\n      ? current + 1\n      : 0;\n    const active = songs[newSongToPlay];\n\n    this.setState({\n      current: newSongToPlay,\n      active: active,\n      progress: 0,\n      repeat: false,\n    });\n\n    this.audio.src = active.url;\n    this.play();\n    this.props.onNext();\n  };\n\n  previous = () => {\n    const { current, songs } = this.state;\n    const total = songs.length;\n    const newSongToPlay = current > 0 ? current - 1 : total - 1;\n    const active = songs[newSongToPlay];\n\n    this.setState({\n      current: newSongToPlay,\n      active: active,\n      progress: 0,\n    });\n\n    this.audio.src = active.url;\n    this.play();\n    this.props.onPrevious();\n  };\n\n  toggleMute = () => {\n    const { mute } = this.state;\n\n    this.setState({\n      mute: !mute,\n    });\n\n    this.audio.volume = !!mute;\n  };\n\n  render() {\n    const {\n      active: currentSong,\n      progress,\n\n      playing,\n      mute,\n    } = this.state;\n\n    const playPauseClass = classnames({\n      fa: true,\n      \"fa-play\": !playing,\n      \"fa-pause\": playing,\n    });\n\n    const volumeClass = classnames({\n      fa: true,\n      \"fa-volume-up\": !mute,\n      \"fa-volume-off\": mute,\n    });\n\n    return (\n      <div className=\"musicDisplay\">\n        <div className=\"player-container\">\n          <div className=\"artist-info\">\n            <h2 className=\"artist-name\">{currentSong.artist.name}</h2>\n            <h3 className=\"artist-song-name\">{currentSong.artist.song}</h3>\n          </div>\n\n          <div\n            className=\"player-progress-container\"\n            onClick={(e) => this.setProgress(e)}\n          >\n            <span\n              className=\"player-progress-value\"\n              style={{ width: progress + \"%\" }}\n            ></span>\n          </div>\n\n          <div className=\"player-options\">\n            <div className=\"player-buttons player-controls\">\n              <button\n                onClick={this.toggle}\n                className=\"player-btn big\"\n                title=\"Play/Pause\"\n              >\n                <i className={playPauseClass}></i>\n              </button>\n              <button\n                onClick={this.previous}\n                className=\"player-btn medium\"\n                title=\"Previous Song\"\n              >\n                <i className=\"fa fa-backward\"></i>\n              </button>\n              <button\n                onClick={this.next}\n                className=\"player-btn medium\"\n                title=\"Next Song\"\n              >\n                <i className=\"fa fa-forward\"></i>\n              </button>\n            </div>\n\n            <div className=\"player-buttons\">\n              <button\n                className=\"player-btn small volume\"\n                onClick={this.toggleMute}\n                title=\"Mute/Unmute\"\n              >\n                <i className={volumeClass}></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AudioPlayer;"]},"metadata":{},"sourceType":"module"}