{"ast":null,"code":"import React from\"react\";import{ResponsivePie}from\"@nivo/pie\";import{jsx as _jsx}from\"react/jsx-runtime\";var PieChart=function PieChart(_ref){var piedata=_ref.piedata,fetchStateData=_ref.fetchStateData;var data=[];for(var key in piedata){var keyLabel=void 0;if(key===\"ny\"){keyLabel=\"New York\";}if(key===\"or\"){keyLabel=\"Oregon\";}if(key===\"ca\"){keyLabel=\"California\";}if(key===\"wa\"){keyLabel=\"Washington\";}if(key===\"az\"){keyLabel=\"Arizona\";}if(key===\"nv\"){keyLabel=\"Nevada\";}if(key===\"co\"){keyLabel=\"Colorado\";}if(key===\"ut\"){keyLabel=\"Utah\";}var tempObj={};tempObj.id=key;tempObj.label=keyLabel;if(piedata[key].length>1){tempObj.value=piedata[key].length-1;}else{tempObj.value=piedata[key].length;}tempObj.color=\"hsl(205, 70%, 50%)\";data.push(tempObj);}var onClickHandler=function onClickHandler(pieData,allData){fetchStateData(pieData,allData);};return/*#__PURE__*/_jsx(\"div\",{className:\"pieChart\",style:{position:\"relative\"},children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"50%\",height:\"500px\",display:\"flex\",wrap:\"wrap\"},children:/*#__PURE__*/_jsx(ResponsivePie,{data:data,onClick:function onClick(eventData){return onClickHandler(eventData,piedata);},margin:{top:40,right:80,bottom:80,left:80},padAngle:0.7,cornerRadius:3,activeOuterRadiusOffset:8,borderWidth:1,borderColor:{from:\"color\",modifiers:[[\"darker\",0.2]]},arcLinkLabelsSkipAngle:10,arcLinkLabelsTextColor:\"#333333\",arcLinkLabelsThickness:3,arcLinkLabelsColor:{from:\"color\"},arcLabelsSkipAngle:10,arcLabelsTextColor:{from:\"color\",modifiers:[[\"darker\",3]]},defs:[{id:\"dots\",type:\"patternDots\",background:\"inherit\",color:\"rgba(255, 255, 255, 0.3)\",size:4,padding:1,stagger:true},{id:\"lines\",type:\"patternLines\",background:\"inherit\",color:\"rgba(255, 255, 255, 0.3)\",rotation:-45,lineWidth:6,spacing:10}],fill:[{match:{id:\"ny\"},id:\"dots\"},{match:{id:\"az\"},id:\"lines\"}],legends:[{anchor:\"bottom\",direction:\"row\",justify:false,translateX:10,translateY:56,itemsSpacing:0,itemWidth:90,itemHeight:18,itemTextColor:\"#999\",itemDirection:\"left-to-right\",itemOpacity:1,symbolSize:18,symbolShape:\"circle\",effects:[{on:\"hover\",style:{itemTextColor:\"#000\"}}]}]})})});};export default PieChart;","map":{"version":3,"sources":["/Users/anvithapasumarthi/Documents/FrontEndHomework/src/Components/PieChart/index.js"],"names":["React","ResponsivePie","PieChart","piedata","fetchStateData","data","key","keyLabel","tempObj","id","label","length","value","color","push","onClickHandler","pieData","allData","position","width","height","display","wrap","eventData","top","right","bottom","left","from","modifiers","type","background","size","padding","stagger","rotation","lineWidth","spacing","match","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","symbolShape","effects","on","style"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ResponsivePie } from \"@nivo/pie\";\nconst PieChart = ({ piedata, fetchStateData }) => {\n  let data = [];\n  for (let key in piedata) {\n    let keyLabel;\n    if (key === \"ny\") {\n      keyLabel = \"New York\";\n    }\n    if (key === \"or\") {\n      keyLabel = \"Oregon\";\n    }\n    if (key === \"ca\") {\n      keyLabel = \"California\";\n    }\n    if (key === \"wa\") {\n      keyLabel = \"Washington\";\n    }\n    if (key === \"az\") {\n      keyLabel = \"Arizona\";\n    }\n    if (key === \"nv\") {\n      keyLabel = \"Nevada\";\n    }\n    if (key === \"co\") {\n      keyLabel = \"Colorado\";\n    }\n    if (key === \"ut\") {\n      keyLabel = \"Utah\";\n    }\n\n    let tempObj = {};\n    tempObj.id = key;\n    tempObj.label = keyLabel;\n    if (piedata[key].length > 1) {\n      tempObj.value = piedata[key].length - 1;\n    } else {\n      tempObj.value = piedata[key].length;\n    }\n\n    tempObj.color = \"hsl(205, 70%, 50%)\";\n    data.push(tempObj);\n  }\n\n  const onClickHandler = (pieData, allData) => {\n    fetchStateData(pieData, allData);\n  };\n  return (\n    <div className=\"pieChart\" style={{ position: \"relative\" }}>\n      <div\n        style={{\n          width: \"50%\",\n          height: \"500px\",\n          display: \"flex\",\n          wrap: \"wrap\",\n        }}\n      >\n        <ResponsivePie\n          data={data}\n          onClick={(eventData) => onClickHandler(eventData, piedata)}\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n          padAngle={0.7}\n          cornerRadius={3}\n          activeOuterRadiusOffset={8}\n          borderWidth={1}\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n          arcLinkLabelsSkipAngle={10}\n          arcLinkLabelsTextColor=\"#333333\"\n          arcLinkLabelsThickness={3}\n          arcLinkLabelsColor={{ from: \"color\" }}\n          arcLabelsSkipAngle={10}\n          arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", 3]] }}\n          defs={[\n            {\n              id: \"dots\",\n              type: \"patternDots\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              size: 4,\n              padding: 1,\n              stagger: true,\n            },\n            {\n              id: \"lines\",\n              type: \"patternLines\",\n              background: \"inherit\",\n              color: \"rgba(255, 255, 255, 0.3)\",\n              rotation: -45,\n              lineWidth: 6,\n              spacing: 10,\n            },\n          ]}\n          fill={[\n            {\n              match: { id: \"ny\" },\n              id: \"dots\",\n            },\n\n            {\n              match: { id: \"az\" },\n              id: \"lines\",\n            },\n          ]}\n          legends={[\n            {\n              anchor: \"bottom\",\n              direction: \"row\",\n              justify: false,\n              translateX: 10,\n              translateY: 56,\n              itemsSpacing: 0,\n              itemWidth: 90,\n              itemHeight: 18,\n              itemTextColor: \"#999\",\n              itemDirection: \"left-to-right\",\n              itemOpacity: 1,\n              symbolSize: 18,\n              symbolShape: \"circle\",\n              effects: [\n                {\n                  on: \"hover\",\n                  style: {\n                    itemTextColor: \"#000\",\n                  },\n                },\n              ],\n            },\n          ]}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}