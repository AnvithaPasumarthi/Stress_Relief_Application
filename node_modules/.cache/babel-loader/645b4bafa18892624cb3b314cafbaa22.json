{"ast":null,"code":"var _jsxFileName = \"/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n  const [stateSpecificData, setStateSpecificData] = useState();\n  const stateCode = [\"ny\", \"or\"];\n\n  const createDisplayDataJoke = data => {\n    console.log(\"data from joke call\" + data);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Jokedisplay\",\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  };\n\n  const createDisplayDataDictionary = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dictionarydisplay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryWord\",\n          children: `${data.word}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryDefinition\",\n          children: `Meaning: ${data.definition}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dictionaryPronunciation\",\n          children: `Pronunciation:   ${data.pronunciation}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayEventsData = piedata => {\n    // {\n    //   \"id\": \"php\",\n    //   \"label\": \"php\",\n    //   \"value\": 95,\n    //   \"color\": \"hsl(205, 70%, 50%)\"\n    // }\n    console.log(\"piedata\" + piedata);\n    let data = [];\n\n    for (let key in piedata) {\n      let keyLabel;\n\n      if (key === \"ny\") {\n        keyLabel = \"NewYork\";\n      }\n\n      if (key === \"or\") {\n        keyLabel = \"Oregon\";\n      }\n\n      let tempObj = {};\n      tempObj.id = key;\n      tempObj.label = keyLabel;\n\n      if (piedata[key].length > 1) {\n        tempObj.value = piedata[key].length - 1;\n      } else {\n        tempObj.value = piedata[key].length;\n      }\n\n      tempObj.color = \"hsl(205, 70%, 50%)\";\n      data.push(tempObj);\n    }\n\n    const onClickHandler = (pieData, allData) => {\n      let piekey = pieData.data.id;\n      console.log(\"all state data\", allData);\n      let stateData = allData[piekey];\n      setStateSpecificData(stateData);\n      console.log(\"this data\", piekey, stateData);\n    };\n\n    return /*#__PURE__*/_jsxDEV(PieChart, {\n      piedata: piedata,\n      fetchStateData: onClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  };\n\n  const createDisplayDataAdvice = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AdviceDisplay\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"advice\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${data}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataQuotes = data => {\n    let RandomNumber = Math.floor(Math.random() * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuotesDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [data[RandomNumber].en, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data[RandomNumber].author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }, this);\n  };\n\n  const createDisplayDataGIFs = data => {\n    console.log(\"datagifs\" + data.url);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GIFdisplay\",\n        children: [console.log(\"image:\" + data.url), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: data.url,\n          alt: \"GiFs\",\n          height: \"20%\",\n          width: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  const createDisplayDataNews = data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(val => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NewsDisplay\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: val.urlToImage,\n              height: \"20%\",\n              width: \"20%\",\n              alt: \"NewsImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newstitle\",\n              children: `Title : ${val.title}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Newsdescription\",\n              children: [\" \", `Description : ${val.description}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false);\n  };\n\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url).then(res => res.json()).then(data => {\n      console.log(data);\n      setIsEvent(false);\n\n      if (eventName === \"jokes\") {\n        setDisplayData(createDisplayDataJoke(data.joke));\n      } else if (eventName === \"dictionary\") {\n        setDisplayData(createDisplayDataDictionary(data[0]));\n      } else if (eventName === \"advice\") {\n        setDisplayData(createDisplayDataAdvice(data.slip.advice));\n      } else if (eventName === \"quotes\") {\n        setDisplayData(createDisplayDataQuotes(data.slice(0, 100)));\n      } else if (eventName === \"news\") {\n        setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n      } else if (eventName === \"gifs/memes\") {\n        setDisplayData(createDisplayDataGIFs(data));\n      } else if (eventName === \"events\") {\n        setIsEvent(true);\n        let stateObjHolder = {};\n        stateCode.forEach(state => {\n          let stateData = parseStateData(data._embedded.events, state);\n          stateObjHolder[state] = stateData;\n        });\n        console.log(\"details\", stateObjHolder);\n        setAllStateData(stateObjHolder);\n        setDisplayData(createDisplayEventsData(stateObjHolder)); // let stateData = parseStateData(data._embedded.events);\n        // setDisplayData(createDisplayDataEvents(stateData));\n      } //eventsConfig.forEach((val)=>{\n      //     if(val.toLowerCase() === eventName){\n      //   }\n      //  })\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(LaunchPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AllIconsDisplay\",\n        children: eventsConfig.map(data => {\n          return /*#__PURE__*/_jsxDEV(Events, {\n            eventData: data,\n            iconClick: apiResponseHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [displayData && /*#__PURE__*/_jsxDEV(Display, {\n        displayContent: displayData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }, this), isEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"eventsTable\",\n        style: {\n          position: \"absolute\",\n          top: \"500px\",\n          left: \"500px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Event List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), stateSpecificData && stateSpecificData.map(val => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 24\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Bf9+BEvJonHx1Vuip+L1o6HGSj8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anvithapasumarthi/Documents/FrontEndHomework/src/App.js"],"names":["BrowserRouter","React","useState","LaunchPage","Events","Display","eventsConfig","App","isEvent","setIsEvent","displayData","setDisplayData","stateSpecificData","setStateSpecificData","stateCode","createDisplayDataJoke","data","console","log","createDisplayDataDictionary","word","definition","pronunciation","createDisplayEventsData","piedata","key","keyLabel","tempObj","id","label","length","value","color","push","onClickHandler","pieData","allData","piekey","stateData","createDisplayDataAdvice","createDisplayDataQuotes","RandomNumber","Math","floor","random","en","author","createDisplayDataGIFs","url","createDisplayDataNews","map","val","urlToImage","title","description","apiResponseHandler","eventName","fetch","then","res","json","joke","slip","advice","slice","articles","stateObjHolder","forEach","state","parseStateData","_embedded","events","setAllStateData","position","top","left","name"],"mappings":"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","sourcesContent":["import { BrowserRouter } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport LaunchPage from \"./Components/LaunchPage/Launchpage\";\nimport Events from \"./Components/Events/events\";\nimport Display from \"./Components/DisplayEvent\";\nimport { eventsConfig } from \"./config\";\n\nfunction App() {\n  const [isEvent, setIsEvent] = useState(false);\n  const [displayData, setDisplayData] = useState();\n  const [stateSpecificData, setStateSpecificData] = useState();\n  \n  const stateCode = [\n    \"ny\",\n    \"or\",\n  ];\n  const createDisplayDataJoke = (data) => {\n    console.log(\"data from joke call\" + data);\n    return <div className=\"Jokedisplay\">{data}</div>;\n  };\n  const createDisplayDataDictionary = (data) => {\n    return (\n      <>\n        <div className=\"dictionarydisplay\">\n          <div className=\"dictionaryWord\">{`${data.word}`}</div>\n          <div className=\"dictionaryDefinition\">{`Meaning: ${data.definition}`}</div>\n          <div className=\"dictionaryPronunciation\">{`Pronunciation:   ${data.pronunciation}`}</div>\n        </div>\n      </>\n    );\n  };\n  const createDisplayEventsData = (piedata) => {\n    // {\n    //   \"id\": \"php\",\n    //   \"label\": \"php\",\n    //   \"value\": 95,\n    //   \"color\": \"hsl(205, 70%, 50%)\"\n    // }\n    console.log( \"piedata\" +piedata );\n    let data = [];\n    for (let key in piedata) {\n      let keyLabel;\n      if (key === \"ny\") {\n        keyLabel = \"NewYork\";\n      }\n      if (key === \"or\") {\n        keyLabel = \"Oregon\";\n      }\nlet tempObj = {};\n      tempObj.id = key;\n      tempObj.label = keyLabel;\n      if (piedata[key].length > 1) {\n        tempObj.value = piedata[key].length - 1;\n      } else {\n        tempObj.value = piedata[key].length;\n      }\n\n      tempObj.color = \"hsl(205, 70%, 50%)\";\n      data.push(tempObj);\n    }\n    const onClickHandler = (pieData, allData) => {\n      let piekey = pieData.data.id;\n      console.log(\"all state data\", allData);\n      let stateData = allData[piekey];\n      setStateSpecificData(stateData);\n      console.log(\"this data\", piekey, stateData);\n    };\n    return <PieChart piedata={piedata} fetchStateData={onClickHandler} />;\n  }\n  const createDisplayDataAdvice = (data) => {\n    return (\n      <>\n        <div className=\"AdviceDisplay\">\n          <h1 className=\"advice\">\n            <span>{`${data}`}</span>\n          </h1>\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataQuotes = (data) => {\n   \n    let RandomNumber = Math.floor(Math.random() * 100);\n    return ( \n     <div className=\"QuotesDisplay\">\n       <span>{data[RandomNumber].en} </span>\n       <span>{data[RandomNumber].author}</span>\n      </div>\n    );\n  };\n  const createDisplayDataGIFs = (data) => {\n    console.log(\"datagifs\" + data.url);\n    return (\n      <>\n        <div className=\"GIFdisplay\">\n          {console.log(\"image:\" + data.url)}\n          <img src={data.url} alt=\"GiFs\" height=\"20%\" width=\"20%\" />\n        </div>\n      </>\n    );\n  };\n  const createDisplayDataNews = (data) => {\n    return (\n      <>\n        {data.map((val) => {\n          return (\n            <>\n              <div className=\"NewsDisplay\">\n                <img\n                  src={val.urlToImage}\n                  height=\"20%\"\n                  width=\"20%\"\n                  alt=\"NewsImage\"\n                />\n                <div className=\"Newstitle\">{`Title : ${val.title}`}</div>\n                <div className=\"Newsdescription\"> {`Description : ${val.description}`}</div>\n              </div>\n            </>\n          );\n        })}\n      </>\n    );\n  };\n  const apiResponseHandler = (url, eventName) => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setIsEvent(false);\n        if (eventName === \"jokes\") {\n          setDisplayData(createDisplayDataJoke(data.joke));\n        } else if (eventName === \"dictionary\") {\n          setDisplayData(createDisplayDataDictionary(data[0]));\n        } else if (eventName === \"advice\") {\n          setDisplayData(createDisplayDataAdvice(data.slip.advice));\n        }\n        else if (eventName === \"quotes\") {\n          setDisplayData(createDisplayDataQuotes(data.slice(0,100)));\n        }\n        else if (eventName === \"news\") {\n          setDisplayData(createDisplayDataNews(data.articles.slice(0, 5)));\n        }\n        else if (eventName === \"gifs/memes\") {\n          setDisplayData(createDisplayDataGIFs(data));\n        }\n        else if (eventName === \"events\") {\n          setIsEvent(true);\n          let stateObjHolder = {};\n          stateCode.forEach((state) => {\n            let stateData = parseStateData(data._embedded.events, state);\n            stateObjHolder[state] = stateData;\n          });\n          console.log(\"details\", stateObjHolder);\n          setAllStateData(stateObjHolder);\n\n          setDisplayData(createDisplayEventsData(stateObjHolder));\n          // let stateData = parseStateData(data._embedded.events);\n           // setDisplayData(createDisplayDataEvents(stateData));\n        }\n        //eventsConfig.forEach((val)=>{\n          //     if(val.toLowerCase() === eventName){\n\n            //   }\n            //  })\n      });\n  };\n\n  return (\n    <BrowserRouter>\n      <LaunchPage />\n      <div className=\"navContainer\">\n        <div className=\"AllIconsDisplay\">\n          {eventsConfig.map((data) => {\n            return <Events eventData={data} iconClick={apiResponseHandler} />;\n          })}\n        </div>\n      </div>\n      <div className=\"output\">\n        {displayData && <Display displayContent={displayData} />}\n        {isEvent && (\n          <div\n            className=\"eventsTable\"\n            style={{ position: \"absolute\", top: \"500px\", left: \"500px\" }}\n          >\n            <div>Event List</div>\n            {stateSpecificData &&\n              stateSpecificData.map((val) => {\n                return <div>{val.name}</div>;\n              })}\n          </div>\n        )}\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}